<?php

namespace Sy\TutoBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * TutorialRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TutorialRepository extends \Doctrine\ORM\EntityRepository
{
    public function findTutos($classroom, $page, $nbPerPage){
        $qry = $this->createQueryBuilder('t')
            ->leftJoin('t.author', 'u')
            ->addSelect('u')
            ->leftJoin('u.classroom', 'cl')
            ->addSelect('cl')
            ->andWhere('t.fullVisibility = true')
            ->orWhere("cl.name = '".$classroom."'")
            ->orderBy('t.date', 'DESC')
            ->getQuery();

        $qry->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage);

        return new Paginator($qry, true);
    }
    public function findByCategory($classroom, $category, $page, $nbPerPage){
        $qry = $this->createQueryBuilder('t')
            ->leftJoin('t.categories', 'c')
            ->addSelect('c')
            ->leftJoin('t.author', 'u')
            ->addSelect('u')
            ->leftJoin('u.classroom', 'cl')
            ->addSelect('cl')
            ->andWhere('t.fullVisibility = true')
            ->orWhere("cl.name = '".$classroom."'")
            ->andWhere("c.slug = '".$category."'")
            ->orderBy('t.date', 'DESC')
            ->getQuery();

        $qry->setFirstResult(($page-1) * $nbPerPage)
            ->setMaxResults($nbPerPage);

        return new Paginator($qry, true);
    }

}
